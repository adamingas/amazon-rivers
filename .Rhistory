rep(2,10)
?character
as.character(23)
as.character("eleison")
load("faraway)
exit
pop_mu			<- 1.4
pop_sig			<- 1
ind_n			<- 30
set.seed(42)
require(data.table)
require(ggplot2)
require(rstan)
require(rethinking)
seq_len(1)
seq_len(14)
seq(14)
ind_pars		<- data.table(	IND = seq_len(ind_n),
IND_MU = rnorm(ind_n,pop_mu,pop_sig))
ind_pars
head(ind_pars)
#	simulate observations
obs_sig			<- 0.5
tmp				<- 10
df				<- data.table(	IND = seq_len(ind_n),
OBS_N = c(rep(3,tmp),rep(10,tmp),rep(30,tmp)))
df
c(rep(3,tmp),rep(10,tmp),rep(30,tmp))
df				<- merge(df, ind_pars, by='IND')
df				<- merge(df, ind_pars, by='IND')
df				<- merge(df, ind_pars, by='IND')
df
df				<- data.table(	IND = seq_len(ind_n),
OBS_N = c(rep(3,tmp),rep(10,tmp),rep(30,tmp)))
df				<- merge(df, ind_pars, by='IND')
df
do				<- df[, list(	OBS_ID = seq_len(OBS_N),
OBS = rnorm(OBS_N, IND_MU, obs_sig)), by='IND']
do
df
#	make unpooled estimate of MU, and keep record of this
tmp				<- do[, list(	MU_EST_UNPOOLED = mean(OBS)	), by='IND']
tmp
df[, list(	OBS_ID = seq_len(OBS_N)]
df[, list(	OBS_ID = seq_len(OBS_N))]
df
do
df[,list(OBS_ID = seq_len(OBS_N)),by="IND"]
df[,(OBS_ID = seq_len(OBS_N)),by="IND"]
df[,.(OBS_ID = seq_len(OBS_N)),by="IND"]
df
df[,list(OBS_ID = seq_len(OBS_N),IND_MU),by="IND"]
?read.csv
?matrix
install.packages(‘bartMachine’)
install.packages("bartMachine")
install.packages("rJava")
rpareto()
?pareto
?dpareto
??dpareto
library(rmutil)
install.packages("rmutil")
library(rmulti)
library(rmutil)
rpareto()
rpareto()
?rpareto()
hist(rpareto(100,00,1))
hist(rpareto(100,0,1))
hist(rpareto(100,1,1))
hist(rpareto(100,1,2))
hist(rpareto(1000,1,2))
hist(rpareto(10000,1,2))
hist(rpareto(10000,1,2))
hist(log(rpareto(10000,1,2)))
hist(log(rpareto(10000,1,2)))
hist(log(rpareto(10000,1,2)))
hist(log(rpareto(10000,1,2)))
hist(log(rpareto(10000,1,5)))
hist(log(rpareto(10000,1,5)))
rnorm(100,100,15)
generated =rnorm(100,100,15)
gnerated[generated > 100]
generated[generated > 100]
income = rpareto(100,1,2)
income[generated >100]
cor(generated[generated > 100],income[generated >100])
generated =rnorm(1000,100,15)
income = rpareto(1000,1,2)
cor(generated[generated > 100],income[generated >100])
generated =rnorm(1000,100,15)
income = rpareto(1000,1,2)
cor(generated[generated > 100],income[generated >100])
income
income[generated >100]
hist(income[generated >100])
#setwd("~/")
setwd("~/Documents/Stats/Project/amazon-rivers/")
library(vegan)
library(ape)
library(dplyr)
library(ggplot2)
library(magrittr)
library(cluster)
library(metagenomeSeq)
library(caret)
library(MASS)
library(corrplot)
library(mvabund)
library(bartMachine)
wwf =read.table(file = "WWF_Samples.txt",header =TRUE,sep = "\t",stringsAsFactors = FALSE)
otudata = read.table(file = "WWF_Peru_for_BenCalderhead.csv",sep = ",",stringsAsFactors = FALSE)
otutable<- t(otudata)[-seq(1,8),]
colnames(otutable) <- c("ID",t(otudata)[1,-1])
otudf <- as.data.frame(x=otutable[,-1],stringsAsFactors=FALSE,row.names = otutable[,1])
#otudf$ID <- as.character(otudf$ID)
otudf[,]<- sapply(otudf[,], as.numeric)
otumatrix <-as.matrix( t(otudf))
wwfdf <- as.data.frame(x=wwf)
wwfdf$Area_group %<>% as.numeric %>% as.factor
wwfdf[,"Area_group_name"] <- sapply(wwfdf[,"Area_group_name"],as.factor)
wwfdf$Water %<>% as.factor
wwfdf$ID_nosamples <- gsub(pattern = "[a-zA-Z-]","",wwfdf$ID)
wwfdf$ID_nosamples %<>% as.factor
#write.csv(wwfdf,file="wwfdf")
#write.csv(otudf,file = "otudf")
plotfun <- function(data,axis1,axis2){
mergeddata  <-merge(data,wwfdf[,c("ID","Area_group","Area_group_name","Water")],by.x=0,by.y="ID")
return( ggplot(mergeddata,aes_string(axis1,axis2,shape = "Water"),size = 2)
#geom_point(aes(color=Water),size=2)
+ geom_point(aes(fill = Area_group_name),size=3)
+ geom_point(aes(color = Area_group_name),size=2)
+scale_colour_brewer(palette = "Accent")
)}
###########################
# Correlation of features #
###########################
cormatrix <- cor(otudf,method = "spearman")
highCorIndx <- findCorrelation(cormatrix,cutoff = 0.9)
length( highCorIndx)
otudflowcor <- otudf[,-highCorIndx]
#write.csv(otudflowcor,file = "otudflowcor")
otudflowcor%>%
{newMRexperiment(t(.))} %>%
{plotCorr(.,n=300,dendrogram= "none",cexRow = 0.25,
col=heatmapCols,cexCol = 0.25,trace = "none",norm = FALSE
,fun = function(x){cor(x,method = "spearman")})}
#######
# PCA #
#######
PCA <- rda((otudf), scale = FALSE)
barplot(as.vector(PCA$CA$eig)/sum(PCA$CA$eig))
otudist.pam <- pam(x=otudist,diss = TRUE,k=2)
otudf %>%
vegdist(method ="bray")%>%
pam(diss = T,k=2)%>%
plot(which.plot = 2)
?pam
riverdf %>%
vegdist(method ="bray")%>%
pam(diss = T,k=2)%>%
plot(which.plot = 2)
# Unsupervised ml
read.csv("riverdfcsslog",header = T)
# Unsupervised ml
riverdfcsslog =read.csv("riverdfcsslog",header = T)
