rep(2,10)
?character
as.character(23)
as.character("eleison")
load("faraway)
exit
pop_mu			<- 1.4
pop_sig			<- 1
ind_n			<- 30
set.seed(42)
require(data.table)
require(ggplot2)
require(rstan)
require(rethinking)
seq_len(1)
seq_len(14)
seq(14)
ind_pars		<- data.table(	IND = seq_len(ind_n),
IND_MU = rnorm(ind_n,pop_mu,pop_sig))
ind_pars
head(ind_pars)
#	simulate observations
obs_sig			<- 0.5
tmp				<- 10
df				<- data.table(	IND = seq_len(ind_n),
OBS_N = c(rep(3,tmp),rep(10,tmp),rep(30,tmp)))
df
c(rep(3,tmp),rep(10,tmp),rep(30,tmp))
df				<- merge(df, ind_pars, by='IND')
df				<- merge(df, ind_pars, by='IND')
df				<- merge(df, ind_pars, by='IND')
df
df				<- data.table(	IND = seq_len(ind_n),
OBS_N = c(rep(3,tmp),rep(10,tmp),rep(30,tmp)))
df				<- merge(df, ind_pars, by='IND')
df
do				<- df[, list(	OBS_ID = seq_len(OBS_N),
OBS = rnorm(OBS_N, IND_MU, obs_sig)), by='IND']
do
df
#	make unpooled estimate of MU, and keep record of this
tmp				<- do[, list(	MU_EST_UNPOOLED = mean(OBS)	), by='IND']
tmp
df[, list(	OBS_ID = seq_len(OBS_N)]
df[, list(	OBS_ID = seq_len(OBS_N))]
df
do
df[,list(OBS_ID = seq_len(OBS_N)),by="IND"]
df[,(OBS_ID = seq_len(OBS_N)),by="IND"]
df[,.(OBS_ID = seq_len(OBS_N)),by="IND"]
df
df[,list(OBS_ID = seq_len(OBS_N),IND_MU),by="IND"]
?read.csv
?matrix
install.packages(‘bartMachine’)
install.packages("bartMachine")
install.packages("rJava")
#setwd("~/")
setwd("~/Documents/Stats/Project/amazon-rivers/")
library(vegan)
library(ape)
library(dplyr)
library(ggplot2)
library(magrittr)
library(cluster)
library(metagenomeSeq)
library(caret)
library(MASS)
library(corrplot)
library(mvabund)
library(bartMachine)
wwf =read.table(file = "WWF_Samples.txt",header =TRUE,sep = "\t",stringsAsFactors = FALSE)
otudata = read.table(file = "WWF_Peru_for_BenCalderhead.csv",sep = ",",stringsAsFactors = FALSE)
otutable<- t(otudata)[-seq(1,8),]
colnames(otutable) <- c("ID",t(otudata)[1,-1])
otudf <- as.data.frame(x=otutable[,-1],stringsAsFactors=FALSE,row.names = otutable[,1])
#otudf$ID <- as.character(otudf$ID)
otudf[,]<- sapply(otudf[,], as.numeric)
otumatrix <-as.matrix( t(otudf))
wwfdf <- as.data.frame(x=wwf)
wwfdf$Area_group %<>% as.numeric %>% as.factor
wwfdf[,"Area_group_name"] <- sapply(wwfdf[,"Area_group_name"],as.factor)
wwfdf$Water %<>% as.factor
wwfdf$ID_nosamples <- gsub(pattern = "[a-zA-Z-]","",wwfdf$ID)
wwfdf$ID_nosamples %<>% as.factor
#write.csv(wwfdf,file="wwfdf")
#write.csv(otudf,file = "otudf")
plotfun <- function(data,axis1,axis2){
mergeddata  <-merge(data,wwfdf[,c("ID","Area_group","Area_group_name","Water")],by.x=0,by.y="ID")
return( ggplot(mergeddata,aes_string(axis1,axis2,shape = "Water"),size = 2)
#geom_point(aes(color=Water),size=2)
+ geom_point(aes(fill = Area_group_name),size=3)
+ geom_point(aes(color = Area_group_name),size=2)
+scale_colour_brewer(palette = "Accent")
)}
### MRobject creation and exploration
# Creating taxonomic dataframes
taxa <- otudata[,seq(1,8)][,-c(1,2,8)]
taxadf <- data.frame(taxa[-1,],row.names = otudata[-1,1] )
colnames(taxadf) <- taxa[1,]
taxonomicData <- AnnotatedDataFrame(taxadf)
rownames(wwfdf) <- wwfdf$ID
metaData <- AnnotatedDataFrame(wwfdf)
# Crating an MR object
MRdata<- newMRexperiment(t(otudf),featureData = taxonomicData,phenoData = metaData)
# Aggreagating by taxonomy
MRClass <- aggregateByTaxonomy(obj = MRdata,lvl = "Class")
MRClass
taxadf
taxadf["Order"]
taxadf["Class"]
unique(taxadf["Class"])
taxadf["Class"] == "Actinopterygii"
fishindex =taxadf["Class"] == "Actinopterygii"
taxadf[fishindex,:]
taxadf[fishindex,]
rownames( taxadf)
colnames(otudf)
colnames(otudf)=rownames( taxadf)
otudf <- as.data.frame(x=otutable[,-1],stringsAsFactors=FALSE,row.names = otutable[,1])
#otudf$ID <- as.character(otudf$ID)
otudf[,]<- sapply(otudf[,], as.numeric)
colnames(otudf)==rownames( taxadf)
sum(colnames(otudf)==rownames( taxadf))
write.csv(otudf[,fishindex],file = "fishdf")
rownames( taxadf[,"Class"])
rownames( taxadf["Class"])
rownames( taxadf["Class"])
unique(taxadf["Class"])
(taxadf["Class"] == "Actinopterygii")
rownames(taxadf["Class"] == "Actinopterygii")
rownames(taxadf[(taxadf["Class"] == "Actinopterygii"),])
fishotus =rownames(taxadf[(taxadf["Class"] == "Actinopterygii"),])
fishotus
taxadf[fishotus,]
# Normalisation using CSS abd metaseq package
cssnormalisation <- function(dataframe,log=FALSE){
# Normalises dataframe
MRObject <-newMRexperiment(t(dataframe))
MRObject.css<-cumNorm(MRObject, p = cumNormStat(MRObject))
dataframe.css <- t(MRcounts(MRObject.css,norm = TRUE,log = log))
return(dataframe.css)
}
fishotus
fishdf
#only fishes otudf
fishdf = otudf[,fishotus]
fishdf.css = cssnormalisation(fishdf)
fishdf
# Normalisation using CSS abd metaseq package
cssnormalisation <- function(dataframe,log=FALSE){
# Normalises dataframe
MRObject <-newMRexperiment(t(dataframe))
MRObject.css<-cumNorm(MRObject, p = cumNormStat(MRObject))
dataframe.css <- t(MRcounts(MRObject.css,norm = TRUE,log = log))
return(dataframe.css)
}
fishdf.css = cssnormalisation(fishdf)
fishdf
otudf.css1 <- cssnormalisation(otudf[1:140,],log=TRUE)
fishdf.css = cssnormalisation(fishdf)
#only fishes otudf
fishdf = otudf[,fishindex]
fishdf.css = cssnormalisation(fishdf)
fishdf.css
rowSums( fishdf)
notzerosmples =rowSums( fishdf) != 0
notzerosmples
fishdf.css = cssnormalisation(fishdf[notzerosmples,])
fishdf.css
fishdf.css.log =cssnormalisation(fishdf[notzerosmples,],log=TRUE)
write.csv(wwfdf[notzerosmples,],file="wwfdffish")
write.csv(fishdf.css,file= "fishdfcss")
write.csv(fishdf.css.log,file= "fishdfcsslog")
write.csv(fishdf[notzerosmples,],file = "fishdf")
